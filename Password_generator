import random
import string
import pyperclip  # pip install pyperclip
import ttkbootstrap as ttk
from ttkbootstrap.constants import *

# ---------------- Password Strength Checker ----------------
def check_strength(password):
    score = 0
    if len(password) >= 8:
        score += 1
    if any(c.isdigit() for c in password):
        score += 1
    if any(c.islower() for c in password) and any(c.isupper() for c in password):
        score += 1
    if any(c in string.punctuation for c in password):
        score += 1
    if len(password) >= 12:
        score += 1

    # Update progress bar and label
    strength_bar['value'] = (score / 5) * 100
    if score <= 2:
        strength_label.config(text="Weak", bootstyle="danger")
        strength_bar.configure(bootstyle="danger-striped")
    elif score == 3:
        strength_label.config(text="Medium", bootstyle="warning")
        strength_bar.configure(bootstyle="warning-striped")
    else:
        strength_label.config(text="Strong", bootstyle="success")
        strength_bar.configure(bootstyle="success-striped")


# ---------------- Password Generator ----------------
def generate_password():
    length = length_var.get()
    use_letters = letters_var.get()
    use_numbers = numbers_var.get()
    use_symbols = symbols_var.get()

    if not (use_letters or use_numbers or use_symbols):
        result_var.set("Select at least one character set!")
        strength_label.config(text="")
        strength_bar['value'] = 0
        return

    char_pool = ""
    if use_letters:
        char_pool += string.ascii_letters
    if use_numbers:
        char_pool += string.digits
    if use_symbols:
        char_pool += string.punctuation

    password = "".join(random.choice(char_pool) for _ in range(length))
    result_var.set(password)
    check_strength(password)


# ---------------- Copy to Clipboard ----------------
def copy_to_clipboard():
    pyperclip.copy(result_var.get())


# ---------------- UI Setup ----------------
app = ttk.Window(themename="cyborg")
app.title("🔐 Password Generator")
app.geometry("420x420")
app.resizable(False, False)

ttk.Label(app, text="🔑 Random Password Generator", font=("Helvetica", 16, "bold")).pack(pady=10)

# Password Length
length_frame = ttk.Frame(app)
length_frame.pack(pady=10)
ttk.Label(length_frame, text="Password Length:").pack(side=LEFT, padx=5)
length_var = ttk.IntVar(value=12)
ttk.Spinbox(length_frame, from_=4, to=64, textvariable=length_var, width=5).pack(side=LEFT)

# Checkboxes for character sets
letters_var = ttk.BooleanVar(value=True)
numbers_var = ttk.BooleanVar(value=True)
symbols_var = ttk.BooleanVar(value=True)

options_frame = ttk.LabelFrame(app, text="Character Options", padding=10)
options_frame.pack(pady=10)

ttk.Checkbutton(options_frame, text="Letters (A-Z, a-z)", variable=letters_var).pack(anchor=W)
ttk.Checkbutton(options_frame, text="Numbers (0-9)", variable=numbers_var).pack(anchor=W)
ttk.Checkbutton(options_frame, text="Symbols (!@#$...)", variable=symbols_var).pack(anchor=W)

# Result Display
result_var = ttk.StringVar()
result_entry = ttk.Entry(app, textvariable=result_var, font=("Consolas", 14), justify=CENTER)
result_entry.pack(pady=10, fill=X, padx=20)

# Password Strength
strength_frame = ttk.Frame(app)
strength_frame.pack(pady=10)
ttk.Label(strength_frame, text="Strength: ").pack(side=LEFT)
strength_label = ttk.Label(strength_frame, text="", font=("Helvetica", 10, "bold"))
strength_label.pack(side=LEFT, padx=5)

strength_bar = ttk.Progressbar(app, orient="horizontal", mode="determinate", length=300)
strength_bar.pack(pady=5)

# Buttons
btn_frame = ttk.Frame(app)
btn_frame.pack(pady=10)

ttk.Button(btn_frame, text="Generate", bootstyle=SUCCESS, command=generate_password).pack(side=LEFT, padx=5)
ttk.Button(btn_frame, text="Copy", bootstyle=INFO, command=copy_to_clipboard).pack(side=LEFT, padx=5)

# Footer
ttk.Label(app, text="Made with ❤️ in Python", font=("Helvetica", 9)).pack(side=BOTTOM, pady=5)

app.mainloop()
